/*
 * Copyright (c) 2023 Charly Delay <0xcharly>
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DVORAK 0
#define APTMAK 1
#define LOWER 2
#define UPPER 3
#define EXTEND 4
#define SHORTS 5
#define SYSTEM 6

// Custom keycodes.
#define LAUNCHER (LG(SPACE))
#define CTL_TAB (LC(TAB))
#define RCS_TAB (LC(LS(TAB)))

#define EXTPOW_TOG &ext_power EXT_POWER_TOGGLE_CMD
#define RGB_UG_TOG &rgb_ug RGB_TOG

// Adjust sticky-keys configuration.
&sk {
  release-after-ms = <1500>;
  quick-release;
};

// Adjust Caps Word configuration.
&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE MINUS>;
};

/ {
  // Conditional layers configuration, specifically tri-layer.
  conditional_layers {
    compatible = "zmk,conditional-layers";

    // Tri-layer LOWER + UPPER = EXTEND.
    num_tri_layer {
      if-layers = <LOWER UPPER>;
      then-layer = <EXTEND>;
    };
  };

  // Macros configuration, specifically character sequences.
  macros {
    // Cancel sticky mods.
    cancel: cancel_queued_sticky_mods {
      label = "Cancel sticky mods";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap &kp K_CANCEL>, <&macro_pause_for_release>;
    };

    // Right arrow macro: ->
    rarrow: right_arrow {
      label = "Right Arrow";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap &kp MINUS &kp GT>;
    };

    // Fat right arrow macro: =>
    frarrow: fat_right_arrow {
      label = "Fat Right Arrow";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&macro_tap &kp EQUAL &kp GT>;
    };

    // Dead key acute.
    dk_acute: dead_key_ecute {
      label = "Acute dead key";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LALT>
          , <&macro_tap &kp E>
          , <&macro_release &kp LALT>
          ;
    };

    // Dead key grave.
    dk_grave: dead_key_grave {
      label = "Grave dead key";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LALT>
          , <&macro_tap &kp GRAVE>
          , <&macro_release &kp LALT>
          ;
    };

    // Dead key circumflex.
    dk_circ: dead_key_circumflex {
      label = "Circumflex dead key";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LALT>
          , <&macro_tap &kp I>
          , <&macro_release &kp LALT>
          ;
    };

    // Dead key acute.
    dk_trema: dead_key_trema {
      label = "Trema dead key";
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings
          = <&macro_press &kp LALT>
          , <&macro_tap &kp U>
          , <&macro_release &kp LALT>
          ;
    };
  };

  /**
   * Combos configuration: only on base layer.
   *
   * Combo key positions:
   *
   *    0  1  2  3  4    5  6  7  8  9
   *   10 11 12 13 14    15 16 17 18 19
   *   20 21 22 23 24    25 26 27 28 29
   *         30 31 32    33 34 35
   */
  combos {
    compatible = "zmk,combos";

    // Failsafe reset on a 2-key combos.
    combo_sys_reset_lhs {
      timeout-ms = <50>;
      key-positions = <30 32>;
      bindings = <&sys_reset>;
    };
    combo_sys_reset_rhs {
      timeout-ms = <50>;
      key-positions = <33 35>;
      bindings = <&sys_reset>;
    };

    // Cancel sticky mods failsafe.
    combo_cancel {
      timeout-ms = <50>;
      key-positions = <0 9>;
      bindings = <&cancel>;
      layers = <DVORAK APTMAK>;
    };

    // Caps Word on a 2-key combo.
    combo_caps_word {
      timeout-ms = <50>;
      key-positions = <2 7>;
      bindings = <&caps_word>;
      layers = <DVORAK APTMAK>;
    };
  };

  /**
   * Custom shifted keycode for access to convenience symbols from the base layer.
   *
   * Particularly useful for Gmail keyboard shortcuts.
   */
  behaviors {
    // Comma -> Question mark.
    comma_hash: comma_question {
      compatible = "zmk,behavior-mod-morph";
      label = "COMMA_QUESTION";
      #binding-cells = <0>;
      bindings = <&kp COMMA>, <&kp POUND>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  
    // Period -> Exclamation mark.
    dot_excl: period_exclamation {
      compatible = "zmk,behavior-mod-morph";
      label = "PERIOD_EXCLAMATION";
      #binding-cells = <0>;
      bindings = <&kp PERIOD>, <&kp EXCLAMATION>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
  };

  /**
   * 36-key keymap, using a Dvorak or Aptmak base layer.
   */
  keymap {
    compatible = "zmk,keymap";

    /** Traditional Dvorak layout. */
    dvorak {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       &kp APOS     &comma_hash  &dot_excl    &kp P        &kp Y            &kp F        &kp G        &kp C        &kp R        &kp L
       &kp A        &kp O        &kp E        &kp U        &kp I            &kp D        &kp H        &kp T        &kp N        &kp S
       &none        &kp Q        &kp J        &kp K        &kp X            &kp B        &kp M        &kp W        &kp V        &kp Z
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &mo LOWER    &kp SPACE    &mo SHORTS       &kp RCTRL    &sk LSHIFT   &mo UPPER
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };

    /**
     * Alternate layout: Aptmak by Eve.
     *
     *   v w f p b  j l u y '
     *   r s t h k  x n a i o
     *     c g d q  z m , .  
     *              e          
     */
    aptmak {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       &kp V        &kp W        &kp F        &kp P        &kp B            &kp J        &kp L        &kp U        &kp Y        &kp APOS
       &kp R        &kp S        &kp T        &kp H        &kp K            &kp X        &kp N        &kp A        &kp I        &kp O
       &none        &kp C        &kp G        &kp D        &kp Q            &kp Z        &kp M        &kp COMMA    &kp DOT      &none
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &mo LOWER    &kp SPACE    &mo SHORTS       &kp RCTRL    &kp E        &mo UPPER
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };

    /**
     * Lower layer. Left thumb down.
     *
     * Navigation and symbols.
     *
     *   - Primary hand (left):
     *     - Home-row sticky mods.
     *     - Direct access desktop shortcuts.
     *   - Secondary hand (right):
     *     - Inverted T arrow cluster.
     *     - Parenthesis brackets.
     *     - Semi-colon for synergy with parenthesis and alt mod.
     */
    lower {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       &kp LA(N1)   &kp LA(N2)   &kp LA(N3)   &kp LA(N4)   &kp LA(N5)       &none        &kp LS(TAB)  &kp UP       &kp BSPC     &kp TAB
       &sk LALT     &sk LGUI     &sk LCTRL    &sk LSHIFT   &kp LAUNCHER     &none        &kp LEFT     &kp DOWN     &kp RIGHT    &kp ENTER
       &none        &kp RCS_TAB  &kp LG(C)    &kp CTL_TAB  &kp LG(V)        &none        &kp LPAR     &kp SEMI     &kp RPAR     &none
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &trans /*↓*/ &trans       &sl SYSTEM       &trans       &trans       &trans
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };

    /**
     * Upper layer. Right thumb down.
     *
     * Symbols.
     *
     *   - Primary hand (right):
     *     - Underscore for symmetry with dash on other half.
     *     - Caret and dollar for Vi-motions.
     *     - Square and curly brackets.
     *     - Double quotes for modal editors registry.
     *   - Secondary hand (left):
     *     - Most common operators.
     *     - Hash and exclamation mark for Gmail shortcuts, and with synergy with right-side brackets.
     *     - Modal editors escape+colon roll for command mode.
     */
    upper {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       &none        &kp HASH     &kp EXCL     &kp EQUAL    &none            &none        &kp CARET    &kp QMARK    &kp DOLLAR   &none
       &kp GRAVE    &kp ESCAPE   &kp MINUS    &kp COLON    &none            &none        &kp LBRC     &kp UNDER    &kp RBRC     &kp AT
       &none        &kp PLUS     &kp ASTERISK &kp SLASH    &none            &none        &kp LBKT     &kp DQT      &kp RBKT     &none
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &trans       &trans       &trans           &sl SYSTEM   &trans       &trans /*↓*/
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };

    /**
     * Extend layer. Classic tri-layer activated from both lower and upper layers.
     *
     * Numbers and symbols.
     *
     *   - Optimized numrow, and balanced operators.
     *   - Tilde and forward-slash synergy for paths. 
     */
    extend {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       &kp TILDE    &kp SLASH    &kp MINUS    &kp PERCENT  &none            &none        &kp EQUAL    &kp PLUS     &kp ASTERISK &kp BSLH
       &kp N7       &kp N5       &kp N1       &kp N3       &kp COMMA        &kp DOT      &kp N2       &kp N0       &kp N4       &kp N6
       &none        &kp LT       &kp AMPS     &kp N9       &rarrow          &frarrow     &kp N8       &kp PIPE     &kp GT       &none
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &trans /*↓*/ &none        &trans           &trans       &none        &trans /*↓*/
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };

    /**
     * Shortcuts layer. Left thumb down.
     *
     *   - Primary hand (left):
     *     - 
     *   - Secondary hand (right):
     *     - 
     */
    shortcuts {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       &kp HASH     &kp O        &kp E        &kp U        &kp EXCL         &none        &kp N7       &kp N8       &kp N9       &kp TAB
       &kp H        &kp J        &kp K        &kp L        &kp X            &none        &kp N4       &kp N5       &kp N6       &kp ENTER
       &none        &none        &none        &none        &none            &none        &kp N1       &kp N2       &kp N3       &none
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &none        &none        &trans /*↓*/     &trans       &kp N0       &trans
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };

   /**
    * System layer for hardware controls.
    * 
    * Available as a sticky-layer with a hard-to-mistap thumb cluster tap dance.
    *
    *   - Bluetooth channels.
    *   - Reset/bootloader.
    *   - Base layers.
    *   - Ext power/RGB.
    */
    system {
      bindings = <
  /* ╭──────────────────────────────────────────────────────────────────╮ ╭──────────────────────────────────────────────────────────────────╮ */
       EXTPOW_TOG   &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 EXTPOW_TOG
       RGB_UG_TOG   &to APTMAK   &to DVORAK   &none        &bt BT_CLR       &bt BT_CLR   &none        &to DVORAK   &to APTMAK   RGB_UG_TOG
       &none        &bt BT_PRV   &sys_reset   &bt BT_NXT   &bootloader      &bootloader  &bt BT_PRV   &sys_reset   &bt BT_NXT   &none
  /* ╰──────────────────────────────────────────────────────────────────┤ ├──────────────────────────────────────────────────────────────────╯ */
                                 &none        &none        &none            &none        &none        &none
  /*                           ╰────────────────────────────────────────╯ ╰────────────────────────────────────────╯                           */
      >;
    };
  };
};
